#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Воспроизведение видеоданных из сенсора Kinect 2
"""

# ######################################################################################################################
# Импорт необходимых инструментов
# ######################################################################################################################
import sys          # Доступ к некоторым переменным и функциям Python
import platform     # Информация об операционной системе
import time         # Работа со временем
import numpy as np  # Научные вычисления
import cv2          # Алгоритмы компьютерного зрения

from datetime import datetime    # Работа со временем
from _testcapi import USHRT_MAX  # Максимально доступное число для формата ushort

# Персональные
from liberty.modules.core import config as cfg    # Глобальный файл настроек
from liberty.modules.kinect2.core.cap import Cap  # Заглушка

cap = Cap()

if cap.win8_later() is False:
    raise SystemExit(0)

from liberty.modules.kinect2.core import PyKinectRuntime, PyKinectV2  # Работа с Kinect 2


# ######################################################################################################################
# Сообщения
# ######################################################################################################################
class Messages(cfg.Messages):
    """Класс для сообщений"""

    # ------------------------------------------------------------------------------------------------------------------
    # Конструктор
    # ------------------------------------------------------------------------------------------------------------------

    def __init__(self):
        super().__init__()  # Выполнение конструктора из суперкласса

        self._run_kinect = self._('[{}] Запуск сенсора Kinect 2 ...')
        self._kinect_not_found = self._('[{}{}{}] Достигнут лимит ожидания запуска сенсора Kinect 2 в {} секунд ...')


# ######################################################################################################################
# Воспроизведение видеоданных из сенсора Kinect 2
# ######################################################################################################################
class KinectViewer(Messages):
    """Класс для Воспроизведения видеоданных из сенсора Kinect 2"""

    # ------------------------------------------------------------------------------------------------------------------
    # Конструктор
    # ------------------------------------------------------------------------------------------------------------------

    def __init__(self):
        super().__init__()  # Выполнение конструктора из суперкласса

        self._kinect = None  # Kinect 2

        self._wait = 10  # Количество секунд для ожидания включения Kinect 2

        self._cnt_bodies = 0  # Количество найденных скелетов

        self._skeleton_landmarks_color = {}  # Ориентиры скелетов для соединения линиями
        self._skeleton_landmarks_depth = {}  # Ориентиры скелетов карт глубины


def main():
    kinect = KinectViewer()


if __name__ == "__main__":
    main()
